{"version":3,"sources":["constants/colors.js","constants/variables.js","components/Loading.js","Route.js","App.js","reportWebVitals.js","index.js"],"names":["GRAY_1","GRAY_2","GRAY_3","GREEN_PRIMARY","WHITE","BLACK","GRAY_INPUT_TEXT","MAX_WIDTH","END_POINT","process","LoadingContainer","styled","div","Spinner","Loading","props","visible","ChatroomComponent","React","lazy","LoginScreen","RouteComponent","useState","socket","setSocket","connectSocket","a","io","transports","useEffect","path","element","App","fallback","Route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGAAA,8OAAO,IAAMA,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAgB,UAChBC,EAAQ,UACRC,EAAQ,UACRC,EAAkB,a,gCCN/B,oEAAO,IAAMC,EAAY,QACZC,EAGPC,iD,gHCgBN,IAAMC,EAAmBC,IAAOC,IAAV,gOAYTC,EAAUF,IAAOC,IAAV,8OACEZ,IAEIG,KAOXW,IAhCf,SAAiBC,GAEf,OADoBA,EAAZC,QAGN,cAACN,EAAD,UACE,cAACG,EAAD,MAHiB,O,gLCPjBI,EAAoBC,IAAMC,MAAK,kBACnC,sDAEIC,EAAcF,IAAMC,MAAK,kBAAM,sDAkCtBE,MA5Bf,WAA2B,IAAD,EACIC,mBAAS,MADb,mBACjBC,EADiB,KACTC,EADS,KAGlBC,EAAa,uCAAG,sBAAAC,EAAA,sEACdF,EACJG,YAAG,GAAD,OAAInB,KAAa,CACjBoB,WAAY,CAAC,YAAa,cAHV,2CAAH,qDAYnB,OAJAC,qBAAU,WACRJ,MACC,IAGD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,IAAIC,QAAS,cAACX,EAAD,MACzB,cAAC,IAAD,CACEU,KAAK,QACLC,QACE,cAACd,EAAD,CAAmBQ,cAAeA,EAAeF,OAAQA,U,QChBpDS,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,cAACnB,EAAA,EAAD,CAASE,SAAS,IAAtC,SACE,cAACkB,EAAD,SCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e4027eb.chunk.js","sourcesContent":["export const GRAY_1 = \"#F6F6F6\";\r\nexport const GRAY_2 = \"#E8E8E8\";\r\nexport const GRAY_3 = \"#BDBDBD\";\r\nexport const GREEN_PRIMARY = \"#5DB075\";\r\nexport const WHITE = \"#FFFFFF\";\r\nexport const BLACK = \"#000000\";\r\nexport const GRAY_INPUT_TEXT = \"#201a19cc\";\r\n","export const MAX_WIDTH = \"350px\";\r\nexport const END_POINT =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:3000\"\r\n    : process.env.REACT_APP_END_POINT;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GRAY_1, GREEN_PRIMARY } from \"constants/colors\";\r\n\r\n/**\r\n * Loading Component\r\n * @typedef PropTypes\r\n * @property {Boolean} visible State loading\r\n * @returns {JSX.Element}\r\n */\r\nfunction Loading(props) {\r\n  const { visible } = props;\r\n  if (!visible) return null;\r\n  return (\r\n    <LoadingContainer>\r\n      <Spinner />\r\n    </LoadingContainer>\r\n  );\r\n}\r\n\r\nconst LoadingContainer = styled.div`\r\n  position: fixed;\r\n  z-index: 99;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #ffffff80;\r\n`;\r\nexport const Spinner = styled.div`\r\n  border: 8px solid ${GRAY_1};\r\n  border-radius: 50%;\r\n  border-top: 8px solid ${GREEN_PRIMARY};\r\n  width: 50px;\r\n  height: 50px;\r\n  -webkit-animation: spin 2s linear infinite; /* Safari */\r\n  animation: spin 2s linear infinite;\r\n`;\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport { END_POINT } from \"constants/variables\";\r\n\r\nconst ChatroomComponent = React.lazy(() =>\r\n  import(\"screens/chatroom/Component\")\r\n);\r\nconst LoginScreen = React.lazy(() => import(\"screens/login/Component\"));\r\n\r\n/**\r\n * Route Component\r\n * @returns {JSX.Element}\r\n */\r\nfunction RouteComponent() {\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const connectSocket = async () => {\r\n    await setSocket(\r\n      io(`${END_POINT}`, {\r\n        transports: [\"websocket\", \"polling\"],\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectSocket();\r\n  }, []);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<LoginScreen />} />\r\n      <Route\r\n        path=\"/chat\"\r\n        element={\r\n          <ChatroomComponent connectSocket={connectSocket} socket={socket} />\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default RouteComponent;\r\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport RouteComponent from \"Route\";\nimport Loading from \"components/Loading\";\n\n/**\n * App Component\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<Loading visible={true} />}>\n        <RouteComponent />\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}